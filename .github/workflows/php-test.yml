name: PHP Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compute-previous-wordpress-version:
    runs-on: ubuntu-latest
    outputs:
      latest-wordpress-version: ${{ steps.get-latest-wordpress-version.outputs.latest-wordpress-version }}
      previous-wordpress-version: ${{ steps.get-previous-wordpress-version.outputs.previous-wordpress-version }}

    steps:
      - name: Get latest WordPress version
        id: get-latest-wordpress-version
        run: |
          curl \
            -H "Accept: application/json" \
            -o versions.json \
            "http://api.wordpress.org/core/stable-check/1.0/"
          LATEST_WP_VERSION=$(jq --raw-output 'with_entries(select(.value=="latest"))|keys[]' versions.json)
          echo "latest-wordpress-version=${LATEST_WP_VERSION}" >> $GITHUB_OUTPUT
          rm versions.json

      - name: Get previous WordPress version
        id: get-previous-wordpress-version
        run: |
          curl \
          -H "Accept: application/json" \
          -o versions.json \
          "http://api.wordpress.org/core/stable-check/1.0/"
          LATEST_WP_VERSION=$(jq --raw-output 'with_entries(select(.value=="latest"))|keys[]' versions.json)
          IFS='.' read LATEST_WP_MAJOR LATEST_WP_MINOR LATEST_WP_PATCH <<< "${LATEST_WP_VERSION}"
          if [[ ${LATEST_WP_MINOR} == "0" ]]; then
            PREVIOUS_WP_SERIES="$((LATEST_WP_MAJOR - 1)).9"
          else
            PREVIOUS_WP_SERIES="${LATEST_WP_MAJOR}.$((LATEST_WP_MINOR - 1))"
          fi
          PREVIOUS_WP_VERSION=$(jq --raw-output --arg series "${PREVIOUS_WP_SERIES}" 'with_entries(select(.key|startswith($series)))|keys[-1]' versions.json)
          echo "previous-wordpress-version=${PREVIOUS_WP_VERSION}" >> $GITHUB_OUTPUT
          rm versions.json

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [7.4, 8.0, 8.1, 8.2, 8.3, 8.4]
        wordpress: ["${{needs.compute-previous-wordpress-version.outputs.latest-wordpress-version}}", "${{ needs.compute-previous-wordpress-version.outputs.previous-wordpress-version }}"]

    name: PHP ${{ matrix.php }} / WP ${{ matrix.wordpress }}

    env:
      WP_ENV_PHP_VERSION: ${{ matrix.php }}
      WP_ENV_CORE: ${{ matrix.wordpress == '' && 'WordPress/WordPress' || format( 'https://wordpress.org/wordpress-{0}.zip', matrix.wordpress ) }}


    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-progress --no-suggest
        npm ci

    - name: PHP CodeSniffer
      run: |
        composer phpcs

    - name: PHPStan
      run: |
        composer phpstan

    - name: Start Docker environment
      run: npm run wp-env start

    - name: Log running Docker containers
      run: docker ps -a

    - name: Running unit tests
      run: |
          set -o pipefail
          npm run test:php
